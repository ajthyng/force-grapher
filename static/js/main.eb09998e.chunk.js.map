{"version":3,"sources":["components/Legend/Legend.js","util/Subject.js","util/Graph.js","util/Network.js","hooks/useEvent.js","hooks/useEventListener.js","components/SystemsGraph/SystemsGraph.js","util/FileManager.js","components/CommandBar/CommandBar.js","components/SystemForm/ConnectionReadWrite.js","components/SystemForm/Connection.js","components/SystemForm/SystemType.js","components/SystemForm/SystemFormView.js","components/SystemForm/SystemForm.js","components/NodeDetail/NodeDetailView.js","components/NodeDetail/NodeDetail.js","components/Loading/Loading.js","components/DiagramForm/DiagramFormView.js","components/DiagramForm/DiagramForm.js","components/DiagramBrowser/DiagramList.js","components/DiagramBrowser/DiagramBrowserView.js","components/DiagramBrowser/DiagramBrowser.js","components/DiagramTitle/DiagramTitle.js","App.js","index.js"],"names":["LegendContainer","styled","div","_templateObject","LegendIcon","i","_templateObject2","OnCampus","attrs","props","className","_templateObject3","External","_templateObject4","Cloud","_templateObject5","NodeContainer","_templateObject6","Label","span","_templateObject7","CircleBox","_templateObject8","Circle","_templateObject9","Node","Icon","icon","react_default","a","createElement","label","CircleNode","EdgeContainer","_templateObject10","EdgeStyle","_templateObject11","_ref","dashed","_ref2","color","EdgeStyleContainer","_templateObject12","Edge","Legend","Legend_CircleNode","Legend_Node","Legend_Edge","_handlers","Subject","subscribe","event","handler","push","unsubscribe","filter","func","next","_len","arguments","length","args","Array","_key","forEach","apply","Object","freeze","Graph","_get","key","defaultValue","value","localStorage","getItem","JSON","parse","err","_set","setItem","stringify","fixEdges","oldEdges","edges","objectSpread","edgeKeys","keys","didFix","nodeEdges","currentEdgeID","edge","node","otherEdges","otherEdgeIndex","findIndex","splice","updateNodePosition","asyncToGenerator","regenerator_default","mark","_callee","x","y","nodes","wrap","_context","prev","getNodes","sent","position","abrupt","setNodes","stop","_x","this","updateBatchNodePositions","_ref3","_callee2","existingNodes","_context2","entries","_ref4","_ref5","slicedToArray","_ref5$","_x2","getEdges","_ref6","_callee3","current","_edges","_fixEdges","_edges2","_context3","getCurrentDiagram","updateDiagrams","removeItem","get","setEdges","getNodesArray","_ref7","_callee4","_context4","values","_ref8","_callee5","_context5","_nodes","getDiagrams","_ref9","_callee6","_context6","_ref10","_callee7","diagram","diagrams","_context7","_id","_x3","_ref11","_callee8","_context8","_x4","_ref12","_callee9","_context9","_x5","addNode","_ref13","_callee10","_context10","id","Error","makeEdges","_x6","addEdge","_ref14","_callee11","node1","node2","data","_context11","isArray","addDirectedEdge","_x7","_x8","_x9","_ref15","_callee12","node2TargetID","_context12","_x10","_x11","_x12","removeDirectedEdge","_ref16","_callee13","_context13","_x13","_x14","removeEdge","_ref17","_callee14","_context14","_x15","_x16","makeNode","_ref19","_callee15","_ref18","connections","connectionKeys","previousEdges","removeEdges","_context15","concat","undefined","map","item","uuid","index","remove","info","type","read","write","existingEdgeIndex","text","_x17","_ref20","_callee16","_loop","cleanup","_context17","prevEdge","_context16","find","delegateYield","differenceby","_x18","setCurrentDiagram","_ref21","_callee17","_context18","_x19","setName","_ref22","_callee18","name","_context19","_name","_x20","saveUploadedData","_ref24","_callee19","_ref23","_context20","_x21","_ref25","_callee20","diagramKeys","_context21","_deleted","makeNewDiagram","_ref27","_callee21","_ref26","_context22","_x22","setDiagramName","_ref29","_callee22","_ref28","_context23","_x23","deleteNodes","_ref30","_callee23","updatedNodes","updatedEdges","_context24","unset","edgesToRemove","_x24","getTitle","_ref31","_callee24","_context25","deleteDiagram","_ref32","_callee25","_context26","_x25","countEdges","_ref33","_callee26","count","_context27","console","log","list","_x26","_Graph","Network","_options","_container","_network","makeData","DataSet","builder","withEdges","withNodes","withOptions","options","inContainer","element","build","VisNetwork","once","fit","animation","duration","easingFunction","network","setData","_Network","useEvent","useEffect","useEventListener","eventName","window","savedHandler","useRef","addEventListener","eventListener","removeEventListener","systemsReducer","state","action","buildGraphData","getLinkColor","getArrowDirection","graphData","shape","shapeProperties","size","face","code","getShape","font","strokeWidth","strokeColor","scaling","min","max","enabled","customScalingFunction","total","scale","Math","shadow","nodeId","from","to","smooth","hover","highlight","dashes","arrows","SystemsGraph","_useReducer","useReducer","_useReducer2","systems","systemsDispatch","_useState","useState","_useState2","activeNode","setActiveNode","viewPort","lastAdded","selectedNodes","holdingShift","graphContainer","graph","updateGraph","broadcastGraphDataUpdate","deleteSelectedNodes","useCallback","getScale","getViewPosition","displayNodeDetails","results","selected","getSelectedNodes","unselectAll","selectNodes","handleNodeSelect","params","isCluster","matchingNode","handleNodeClick","getNodeAt","pointer","DOM","toConsumableArray","handleNodeDrag","positions","getPositions","handleKeyDown","keyCode","ctrlKey","preventDefault","shiftKey","handleKeyUp","off","on","moveTo","_unused","start","Date","systemGraph","autoResize","interaction","hoverConnectedEdges","physics","document","e","Fragment","style","overflow","flex","ref","Legend_Legend","downloadFile","filename","setAttribute","encodeURIComponent","dayjs","format","display","body","appendChild","click","removeChild","handleFile","reader","FileReader","readAsBinaryString","target","files","onloadend","result","handleSearch","toLowerCase","includes","SearchNodes","SearchBox","placeholder","styles","root","width","alignSelf","onChange","debounce","CommandBar","toggleSystemForm","toggleDiagramForm","openDiagramBrowser","querySelector","focus","farItems","iconProps","iconName","onClick","onRender","nearItems","subMenuProps","items","uploadFile","_onClick","CommandBar_CommandBar","canChange","nextPath","nextValue","currentRead","currentWrite","ConnectionReadWrite","Stack","marginRight","marginTop","verticalAlign","tokens","childrenGap","Checkbox","checked","ConnectionContainer","Connection_templateObject","Connection","handleRemove","edit","addNodeForm","nodeFormErrors","setNodeFormErrors","existingSystems","updateNodeForm","selectedTarget","selectedType","selectedRead","selectedWrite","targetError","typeError","path","IconButton","Dropdown","errorMessage","selectedKey","errors","ConnectionReadWrite_ConnectionReadWrite","SystemType","React","memo","required","prevProps","nextProps","keysUnchanged","errorUnchanged","SystemFormView","addConnection","loading","TextField","onGetErrorMessage","newSystem","String","some","department","url","URL","message","checkURL","multiline","rows","description","conn","cloneElement","renderConnections","ActionButton","makeConnections","system","connectionType","connectedTo","addNodeReducer","addNodeState","formState","set","connectionReducer","Connection_Connection","dispatch","getSystems","sort","b","validate","error","SystemForm","setLoading","_useState3","_useState4","setEdit","_useState5","_useState6","isOpen","setIsOpen","_useState7","_useState8","setExistingSystems","_useState9","_useState10","_useReducer3","_useReducer4","connDispatch","resetForm","resetConnections","_Network$build","getConnectedNodes","connectedNodes","makeFormState","submitSystem","_node","broadcastNodeSave","nodeAdded","dismiss","updateExistingSystems","Panel","headerText","onDismiss","isFooterAtBottom","onRenderFooterContent","horizontal","horizontalAlign","DefaultButton","PrimaryButton","PanelType","medium","SystemFormView_SystemFormView","NodeDetailView","Text","textDecoration","variant","href","rel","CustomPanel","NodeDetail_templateObject","NodeDetail","setNode","editSystem","deselectActiveNode","handleEdit","onRenderHeader","marginLeft","marginBottom","isLightDismiss","customNear","customWidth","NodeDetail_NodeDetailView","cubeMove","keyframes","Loading_templateObject","Spinner","Loading_templateObject2","cubeCSS","css","Loading_templateObject3","CubeOne","Loading_templateObject4","CubeTwo","Loading_templateObject5","Loading","Form","DiagramFormView_templateObject","ButtonGroup","DiagramFormView_templateObject2","Title","DiagramFormView_templateObject3","Close","DiagramFormView_templateObject4","DialogFormView","form","setForm","setErrors","submit","handleNameChange","handleCopyChange","Toggle","inlineLabel","onText","offText","copy","formReducer","removedState","updatedState","DiagramForm","initialForm","openDiagramForm","closeDiagramForm","shouldCopy","Modal","isBlocking","DiagramFormView_DialogFormView","Container","DiagramList_templateObject","DiagramContainer","backgroundColor","DiagramList_templateObject2","DiagramName","toggleEdit","checkForEnter","which","onKeyDown","userSelect","Diagram","handleSelect","diagramName","graphDataUpdated","broadcastDiagramDeletion","updateGraphDataName","selectDiagram","DiagramList_DiagramName","alignItems","justifyItems","flexDirection","justifySelf","DiagramList","paddingLeft","paddingRight","textAlign","DiagramList_Diagram","defaultProps","ListContainer","DiagramBrowserView_templateObject","DiagramBrowserView","Loading_Loading","DiagramList_DiagramList","diagramReducer","diagramsObject","t0","DiagramBrowser","closeDiagramBrowser","handleDiagramDeletion","DiagramBrowserView_DiagramBrowserView","title","DiagramTitle_templateObject","titleReducer","DiagramTitle","updateTitle","DiagramTitle_Container","Page","App_templateObject","App","CommandBar_CommandBar_CommandBar","DiagramTitle_DiagramTitle","DiagramForm_DiagramForm","DiagramBrowser_DiagramBrowser","SystemsGraph_SystemsGraph","SystemForm_SystemForm","NodeDetail_NodeDetail","initializeIcons","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.eb09998e.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst LegendContainer = styled.div`\n  transform: scale(0.3) translate3d(-392px, 450px, 0);\n  position: absolute;\n  bottom: 12px;\n  left: 12px;\n  width: 300px;\n  border: solid 2px #808080;\n  border-radius: 3px;\n  background-color: #e8e3db;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  display: flex;\n  padding: 12px;\n\n  @media only screen and (max-width: 767px) {\n    display: none;\n  }\n\n  transition: transform 300ms ease-in-out;\n\n  &:hover {\n    transform: scale(1) translate3d(0, 0, 0);\n  }\n`\n\nconst LegendIcon = styled.i`\n  color: white;\n  font-size: 60px;\n  text-shadow: 2px 2px 4px #808080;\n  margin: 8px;\n  min-width: 60px;\n`\n\nconst OnCampus = styled(LegendIcon).attrs(props => ({ className: 'ion-md-star' }))``\nconst External = styled(LegendIcon).attrs(props => ({ className: 'ion-md-square' }))``\nconst Cloud = styled(LegendIcon).attrs(props => ({ className: 'ion-md-cloud' }))``\n\nconst NodeContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`\n\nconst Label = styled.span`\n  color: #363534;\n  font-size: 18px;\n`\n\nconst CircleBox = styled.div`\n  min-width: 60px;\n  width: 60px;\n  margin: 8px;\n`\n\nconst Circle = styled.div`\n  width: 45px;\n  height: 45px;\n  border-radius: 25px;\n  background-color: white;\n  box-shadow: 2px 2px 4px #808080;\n`\n\nconst Node = props => {\n  const Icon = props.icon\n  return (\n    <NodeContainer>\n      <Icon />\n      <Label>{props.label}</Label>\n    </NodeContainer>\n  )\n}\n\nconst CircleNode = props => {\n  return (\n    <NodeContainer>\n      <CircleBox>\n        <Circle />\n      </CircleBox>\n      <Label>{props.label}</Label>\n    </NodeContainer>\n  )\n}\n\nconst EdgeContainer = styled(NodeContainer)`\n  margin-top: 12px;\n  margin-bottom: 24px;\n`\n\nconst EdgeStyle = styled.div`\n  width: 45px;\n  min-width: 45px;\n  border-top: ${({ dashed }) => dashed ? 'dashed' : 'solid'} ${({ color }) => color} 4px;\n`\n\nconst EdgeStyleContainer = styled.div`\n  width: 60px;\n  min-width: 60px;\n  margin: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Edge = props => {\n  const { color, label, dashed } = props\n  return (\n    <EdgeContainer>\n      <EdgeStyleContainer>\n        <EdgeStyle color={color} dashed={dashed} />\n      </EdgeStyleContainer>\n      <Label >{label}</Label>\n    </EdgeContainer>\n  )\n}\n\nexport const Legend = props => {\n  return (\n    <LegendContainer>\n      <CircleNode icon={OnCampus} label='On Campus System' />\n      <Node icon={External} label='External System' />\n      <Node icon={Cloud} label='Cloud System' />\n      <Edge color='#005481' dashed label='Custom Interface' />\n      <Edge color='#9e6614' label='Built-in Interface' />\n    </LegendContainer>\n  )\n}\n","const _handlers = {}\n\nexport const Subject = {\n  subscribe (event, handler) {\n    if (!_handlers[event]) _handlers[event] = []\n    _handlers[event].push(handler)\n  },\n  unsubscribe (event, handler) {\n    if (!_handlers[event]) return\n    _handlers[event] = _handlers[event].filter(func => func !== handler)\n  },\n  next (event, ...args) {\n    if (!_handlers[event]) return\n    _handlers[event].forEach(handler => {\n      if (typeof handler === 'function') {\n        handler(...args)\n      }\n    })\n  }\n}\n\nObject.freeze(Subject)\n","import get from 'lodash.get'\nimport differenceby from 'lodash.differenceby'\nimport uuid from 'uuid/v4'\nimport unset from 'lodash.unset'\n\nconst shouldFixEdges = true\n\nconst _Graph = () => {\n  const _get = (key, defaultValue) => {\n    const value = localStorage.getItem(key) || defaultValue\n    try {\n      const parsed = JSON.parse(value)\n      return parsed\n    } catch (err) {\n      return value\n    }\n  }\n  const _set = (key, value) => localStorage.setItem(key, JSON.stringify(value))\n\n  const fixEdges = oldEdges => {\n    const edges = { ...oldEdges }\n    const edgeKeys = Object.keys(edges)\n    let didFix = false\n\n    edgeKeys.forEach(key => {\n      const nodeEdges = edges[key]\n      const currentEdgeID = key\n      nodeEdges.forEach(edge => {\n        if (!edge) return\n        if (edge.node === key) return\n        const otherEdges = edges[edge.node]\n        const otherEdgeIndex = otherEdges && otherEdges.findIndex(edge => (edge && edge.node === currentEdgeID))\n        if (otherEdgeIndex >= 0) {\n          otherEdges.splice(otherEdgeIndex, 1)\n          if (!didFix) didFix = true\n        }\n      })\n\n      if (edges.length <= 0) delete nodeEdges[key]\n    })\n\n    return { edges, didFix }\n  }\n\n  const updateNodePosition = async ({ node, x, y }) => {\n    const nodes = await getNodes()\n    if (nodes[node]) {\n      nodes[node].position = {\n        x,\n        y\n      }\n    }\n    return setNodes(nodes)\n  }\n\n  const updateBatchNodePositions = async (nodes) => {\n    const existingNodes = await getNodes()\n    Object.entries(nodes).forEach(([node, { x, y }]) => {\n      if (existingNodes[node]) {\n        existingNodes[node].position = { x, y }\n      }\n    })\n    return setNodes(existingNodes)\n  }\n\n  const getEdges = async () => {\n    const current = await getCurrentDiagram()\n    if (!current._edges) {\n      const edges = await _get('_edges', {})\n      if (edges) {\n        current._edges = edges\n        await updateDiagrams(current)\n        await localStorage.removeItem('_edges')\n      }\n    }\n\n    const _edges = get(current, `_edges`, {})\n    if (shouldFixEdges) {\n      const { didFix, edges } = fixEdges(_edges)\n      if (didFix) {\n        await setEdges(edges)\n      }\n    }\n    return _edges\n  }\n\n  const getNodesArray = async () => {\n    const nodes = await getNodes()\n    return Object.values(nodes)\n  }\n\n  const getNodes = async () => {\n    const current = await getCurrentDiagram()\n    if (!current._nodes) {\n      const nodes = await _get('_nodes', {})\n      if (nodes) {\n        current._nodes = nodes\n        await updateDiagrams(current)\n        await localStorage.removeItem('_nodes')\n      }\n    }\n\n    return get(current, `_nodes`, {})\n  }\n\n  const getDiagrams = async () => {\n    return _get('_diagrams', {})\n  }\n\n  const updateDiagrams = async (diagram) => {\n    if (!diagram._id) return\n    const diagrams = await getDiagrams()\n    diagrams[diagram._id] = diagram\n    return _set('_diagrams', diagrams)\n  }\n\n  const setEdges = async (edges) => {\n    const current = await getCurrentDiagram()\n    current._edges = edges\n    return updateDiagrams(current)\n  }\n\n  const setNodes = async (nodes) => {\n    const current = await getCurrentDiagram()\n    current._nodes = nodes\n    return updateDiagrams(current)\n  }\n\n  const addNode = async (node) => {\n    if (!node.id) throw new Error('Nodes must have IDs to be added')\n    const _nodes = await getNodes()\n\n    _nodes[node.id] = node\n\n    await makeEdges(node)\n    await setNodes(_nodes)\n  }\n\n  const addEdge = async (node1, node2, data) => {\n    if (!node1.id || !node2.id) throw new Error('Nodes must have IDs to add edges')\n\n    const _edges = await getEdges()\n\n    if (!Array.isArray(_edges[node1.id])) _edges[node1.id] = []\n\n    await addDirectedEdge(node1, node2, data)\n  }\n\n  const addDirectedEdge = async (node1, node2, data) => {\n    if (!node1.id || !node2.id) throw new Error('Nodes must have IDs to add directed edges')\n\n    const _edges = await getEdges()\n\n    if (!Array.isArray(_edges[node1.id])) _edges[node1.id] = []\n\n    const node2TargetID = _edges[node1.id].findIndex(edge => (edge && edge.node === node2.id))\n\n    if (node2TargetID >= 0) {\n      // Replace edge because it exists already\n      _edges[node1.id][node2TargetID] = { node: node2.id, data }\n    } else {\n      // Add edge, it does not exist\n      _edges[node1.id].push({ node: node2.id, data })\n    }\n\n    await setEdges({ ..._edges })\n  }\n\n  const removeDirectedEdge = async (node1, node2) => {\n    if (!node1.id || !node2.id) throw new Error('Nodes must have IDs to remove directed eges')\n\n    const _edges = await getEdges()\n\n    _edges[node1.id] = _edges[node1.id] && _edges[node1.id].filter(edge => (edge && edge.node !== node2.id))\n\n    await setEdges(_edges)\n  }\n\n  const removeEdge = async (node1, node2) => {\n    if (!node1.id || !node2.id) throw new Error('Nodes must have IDs to remove edges')\n\n    const _edges = await getEdges()\n\n    _edges[node1.id] = _edges[node1.id] && _edges[node1.id].filter(edge => (edge && edge.node !== node2.id))\n\n    await setEdges(_edges)\n  }\n\n  const makeNode = async ({ id, data, connections }) => {\n    let node = null\n    if (id) {\n      const nodes = await getNodes()\n      const position = get(nodes, `[${id}].position`, { x: undefined, y: undefined })\n      node = {\n        id,\n        edges: [],\n        previousEdges: nodes[id].edges.map(item => ({ ...item })),\n        position,\n        data: {\n          ...nodes[id].data,\n          ...data\n        }\n      }\n    } else {\n      node = {\n        id: uuid(),\n        edges: [],\n        data: {\n          ...(data || {})\n        }\n      }\n    }\n\n    const connectionKeys = Object.keys(connections || {})\n    const previousEdges = get(node, 'previousEdges', [])\n\n    if (connectionKeys.length <= 0 && previousEdges.length > 0) {\n      const edges = await getEdges()\n      delete edges[node.id]\n      const removeEdges = []\n      Object.keys(edges).forEach(key => {\n        edges[key].forEach((edge, index) => {\n          if (edge && edge.node === node.id) {\n            removeEdges.push({ key, index })\n          }\n        })\n      })\n      removeEdges.forEach(remove => {\n        edges[remove.key].splice(remove.index, 1)\n      })\n      await setEdges({ ...edges })\n      return node\n    }\n\n    connectionKeys.forEach(key => {\n      const info = get(connections, `${[key]}.connectedTo`, null)\n      if (!info) throw new Error('You cannot make a connection without a target')\n      const type = get(connections, `${[key]}.connectionType`, null)\n      if (!type) throw new Error('You cannot make a connection without a type')\n\n      const read = get(connections, `${[key]}.read`, null)\n      const write = get(connections, `${[key]}.write`, null)\n\n      if (!read && !write) throw new Error('You must specify a read or a write option')\n\n      const data = get(connections, `[${key}].data`, {})\n\n      const existingEdgeIndex = node.edges.findIndex(edge => edge.id === key)\n\n      if (existingEdgeIndex >= 0) {\n        node.edges[existingEdgeIndex] = {\n          id: info.key,\n          data: {\n            ...data,\n            read,\n            write,\n            type: {\n              id: type.key,\n              label: type.text\n            }\n          }\n        }\n      } else {\n        node.edges.push({\n          id: info.key,\n          data: {\n            ...data,\n            read,\n            write,\n            type: {\n              id: type.key,\n              label: type.text\n            }\n          }\n        })\n      }\n    })\n    return node\n  }\n\n  const makeEdges = async (node) => {\n    const edges = get(node, 'edges', [])\n    const previousEdges = get(node, 'previousEdges', [])\n\n    if (edges.length <= 0) return\n\n    for (let i = 0; i < edges.length; i++) {\n      const edge = edges[i]\n\n      const read = get(edge, 'data.read')\n      const write = get(edge, 'data.write')\n\n      const node1 = {\n        id: get(node, 'id')\n      }\n      const node2 = {\n        id: get(edge, 'id')\n      }\n\n      const prevEdge = previousEdges.find(prev => (prev && prev.id === edge.id))\n\n      const prev = {\n        read: get(prevEdge, `data.read`, read),\n        write: get(prevEdge, `data.write`, write)\n      }\n\n      if (prev.read && !read) {\n        await removeDirectedEdge(node2, node1)\n      }\n\n      if (prev.write && !write) {\n        await removeDirectedEdge(node1, node2)\n      }\n\n      if (read && write) {\n        await addEdge(node1, node2, get(edge, 'data'))\n      } else if (read) {\n        await addDirectedEdge(node2, node1, get(edge, 'data'))\n      } else if (write) {\n        await addDirectedEdge(node1, node2, get(edge, 'data'))\n      }\n    }\n\n    const cleanup = differenceby(previousEdges, node.edges, 'id')\n\n    if (cleanup.length >= 0) {\n      for (let i = 0; i < cleanup.length; i++) {\n        const edge = cleanup[i]\n\n        const read = get(edge, 'data.read')\n        const write = get(edge, 'data.write')\n\n        const node1 = {\n          id: get(node, 'id')\n        }\n        const node2 = {\n          id: get(edge, 'id')\n        }\n\n        if (read && write) {\n          await removeEdge(node1, node2)\n        } else if (read) {\n          await removeDirectedEdge(node2, node1)\n        } else if (write) {\n          await removeDirectedEdge(node1, node2)\n        }\n      }\n    }\n  }\n\n  const setCurrentDiagram = async (id) => {\n    return _set('_currentDiagram', id)\n  }\n\n  const setName = async (name) => {\n    const current = await getCurrentDiagram()\n    current._name = name\n    return updateDiagrams(current)\n  }\n\n  const saveUploadedData = async ({ edges, nodes, id, name }) => {\n    if (id) {\n      await setCurrentDiagram(id)\n    }\n\n    if (name) {\n      await setName(name)\n    }\n    await setNodes(nodes)\n    await setEdges(edges)\n  }\n\n  const getCurrentDiagram = async () => {\n    const diagrams = await getDiagrams()\n    let current = await _get('_currentDiagram', null)\n    const diagramKeys = Object.keys(diagrams).filter(key => !diagrams[key]._deleted)\n    if (!current || get(diagrams, '[current]._deleted')) {\n      if (diagramKeys.length > 0) {\n        current = diagramKeys[0]\n      } else {\n        current = uuid()\n      }\n      _set('_currentDiagram', current)\n    }\n    const diagram = diagrams[current]\n\n    return diagram || { _id: current }\n  }\n\n  const makeNewDiagram = async ({ name, edges, nodes }) => {\n    const _id = uuid()\n    const diagram = {\n      _id,\n      _name: name,\n      _edges: edges,\n      _nodes: nodes\n    }\n\n    await updateDiagrams(diagram)\n    return diagram\n  }\n\n  const setDiagramName = async ({ id, name }) => {\n    if (!id) throw new Error(`Cannot find diagram to update.`)\n\n    const diagrams = await getDiagrams()\n    const diagram = diagrams[id]\n\n    if (!diagram) return\n    diagram._name = name\n\n    await updateDiagrams(diagram)\n  }\n\n  const deleteNodes = async (nodes) => {\n    if (!Array.isArray(nodes)) return\n    const _edges = await getEdges()\n    const _nodes = await getNodes()\n\n    const updatedNodes = { ..._nodes }\n    const updatedEdges = { ..._edges }\n\n    for (let i = 0; i < nodes.length; i++) {\n      unset(updatedNodes, `[${nodes[i]}]`)\n    }\n\n    const edgeKeys = Object.keys(updatedEdges)\n\n    nodes.forEach(node => {\n      const edgesToRemove = []\n      edgeKeys.forEach(key => {\n        const edges = updatedEdges[key] || []\n        edges.forEach((edge, index) => {\n          if (edge && edge.node === node) {\n            edgesToRemove.push({ index, key })\n          }\n        })\n      })\n      unset(updatedEdges, `[${node}]`)\n      edgesToRemove.forEach(edge => {\n        unset(updatedEdges, `[${edge.key}][${edge.index}]`)\n      })\n    })\n\n    await setEdges(updatedEdges)\n    await setNodes(updatedNodes)\n  }\n\n  const getTitle = async () => {\n    const diagram = await getCurrentDiagram()\n    return diagram._name || ''\n  }\n\n  const deleteDiagram = async (id) => {\n    let diagrams = await getDiagrams()\n    const diagram = diagrams[id]\n    if (diagram) {\n      diagram._deleted = true\n      await updateDiagrams(diagram)\n      const activeDiagrams = Object.values(diagrams).filter(diagram => !diagram._deleted)\n      if (activeDiagrams.length > 1) {\n        diagrams = await getDiagrams()\n        setCurrentDiagram(Object.keys(diagrams)[0])\n      } else {\n        localStorage.removeItem('_currentDiagram')\n      }\n    }\n  }\n\n  const countEdges = async (id) => {\n    const edges = await getEdges()\n    let count = get(edges, `[${id}].length`)\n    console.log(count)\n    Object.values(edges).forEach(list => {\n      list.forEach(edge => {\n        if (get(edge, 'node') === id) count++\n      })\n    })\n    return count || 1\n  }\n\n  return {\n    getNodes,\n    getEdges,\n    addNode,\n    removeEdge,\n    countEdges,\n    removeDirectedEdge,\n    getDiagrams,\n    updateNodePosition,\n    updateBatchNodePositions,\n    saveUploadedData,\n    getCurrentDiagram,\n    deleteDiagram,\n    deleteNodes,\n    makeNewDiagram,\n    getNodesArray,\n    setCurrentDiagram,\n    getTitle,\n    setDiagramName,\n    makeNode\n  }\n}\n\nexport const Graph = _Graph()\n","import { Network as VisNetwork, DataSet } from 'vis-network'\nimport { Graph } from './Graph'\n\nconst _Network = () => {\n  let _nodes = []\n  let _edges = []\n  let _options = {}\n  let _container = null\n  let _network = null\n\n  const inContainer = element => {\n    _container = element\n    return builder\n  }\n\n  const withNodes = nodes => {\n    _nodes = nodes\n    return builder\n  }\n\n  const withEdges = edges => {\n    _edges = edges\n    return builder\n  }\n\n  const withOptions = options => {\n    _options = options\n    return builder\n  }\n\n  const makeData = () => {\n    return {\n      nodes: new DataSet(_nodes),\n      edges: new DataSet(_edges)\n    }\n  }\n\n  const build = () => {\n    if (!_network) {\n      _network = new VisNetwork(_container, makeData(), _options)\n      _network.once('afterDrawing', function () {\n        _network.fit({\n          animation: {\n            duration: 600,\n            easingFunction: 'easeInOutQuad'\n          }\n        })\n      })\n    }\n    return {\n      network: _network,\n      setData: ({ nodes, edges }) => {\n        _nodes = nodes\n        _edges = edges\n        _network.setData(makeData())\n      },\n      updateNodePosition: Graph.updateNodePosition,\n      getNodes: () => _nodes,\n      getEdges: () => _edges\n    }\n  }\n\n  const builder = {\n    withEdges,\n    withNodes,\n    withOptions,\n    inContainer,\n    build\n  }\n\n  return builder\n}\n\nexport const Network = _Network()\n","import { useEffect } from 'react'\nimport { Subject } from '../util/Subject'\n\nexport const useEvent = (event, handler) => {\n  useEffect(() => {\n    if (typeof handler !== 'function') return\n    Subject.subscribe(event, handler)\n    return () => Subject.unsubscribe(event, handler)\n  }, [event, handler])\n\n  return value => Subject.next(event, value)\n}\n","import { useRef, useEffect } from 'react'\n\nexport const useEventListener = (eventName, handler, element = window) => {\n  // Create a ref that stores handler\n  const savedHandler = useRef()\n\n  // Update ref.current value if handler changes.\n  // This allows our effect below to always get latest handler ...\n  // ... without us needing to pass it in effect deps array ...\n  // ... and potentially cause effect to re-run every render.\n  useEffect(() => {\n    savedHandler.current = handler\n  }, [handler])\n\n  useEffect(\n    () => {\n      // Make sure element supports addEventListener\n      // On\n      const isSupported = element && element.addEventListener\n      if (!isSupported) return\n\n      // Create event listener that calls handler function stored in ref\n      const eventListener = event => savedHandler.current(event)\n\n      // Add event listener\n      element.addEventListener(eventName, eventListener)\n\n      // Remove event listener on cleanup\n      return () => {\n        element.removeEventListener(eventName, eventListener)\n      }\n    },\n    [eventName, element] // Re-run if eventName or element changes\n  )\n}\n","import React, { useReducer, useEffect, useCallback, useState, useRef } from 'react'\nimport { Legend } from '../Legend'\nimport { Network, Graph, Subject } from '../../util'\nimport { useEvent, useEventListener } from '../../hooks'\nimport get from 'lodash.get'\n\nconst systemsReducer = (state, action) => {\n  switch (action.type) {\n    case 'update':\n      const nodes = action.nodes\n      const edges = action.edges\n      return buildGraphData(nodes, edges)\n    default:\n      return state\n  }\n}\n\nconst getLinkColor = (type) => {\n  switch (type) {\n    case 'custom':\n      return '#005481'\n    case 'builtin':\n      return '#9e6614'\n    default:\n      return '#A0A0A0'\n  }\n}\n\nconst getShape = (type) => {\n  switch (type) {\n    case 'cloud':\n      // Cloud shape\n      return { shape: 'icon', shapeProperties: { size: 25 }, icon: { face: 'Ionicons', code: '\\uf2c9', color: '#FFF' } }\n    case 'external':\n      return { shape: 'icon', shapeProperties: { size: 25 }, icon: { face: 'Ionicons', code: '\\uf381', color: '#FFF' } }\n    case 'oncampus':\n    default:\n      // Star Shape\n      return { shape: 'dot', size: 15 }\n  }\n}\n\nconst getArrowDirection = (edge) => {\n  const read = get(edge, 'data.read')\n  const write = get(edge, 'data.write')\n\n  if (read && write) return 'from, to'\n  return 'to'\n}\n\nconst countEdges = (id, edges) => {\n  let count = get(edges, `[${id}].length`, 0)\n  Object.values(edges).forEach(list => {\n    list.forEach(edge => {\n      if (get(edge, 'node') === id) count++\n    })\n  })\n  return count > 5 ? count : 1\n}\n\nconst buildGraphData = (nodes, edges) => {\n  const graphData = {\n    nodes: [],\n    edges: []\n  }\n\n  const nodeKeys = Object.keys(nodes || {})\n  nodeKeys.forEach(key => {\n    const node = nodes[key]\n\n    graphData.nodes.push({\n      id: node.id,\n      type: node.data.type,\n      ...getShape(node.data.type),\n      label: node.data.name,\n      edges: node.edges,\n      font: {\n        color: '#363534',\n        strokeWidth: 2,\n        strokeColor: '#FFFFFF'\n      },\n      scaling: {\n        min: 15,\n        max: 40,\n        label: {\n          enabled: true\n        },\n        customScalingFunction: (min, max, total, value) => {\n          if (min === max) return 0.5\n          const scale = 1 / (max - min)\n          return Math.max(0, (value - min) * scale)\n        }\n      },\n      value: countEdges(key, edges),\n      shadow: {\n        enabled: true,\n        size: 4,\n        x: 1,\n        y: 1\n      },\n      data: {\n        ...node.data\n      },\n      color: '#FFFFFF',\n      x: get(node, 'position.x'),\n      y: get(node, 'position.y')\n    })\n  })\n\n  const edgeKeys = Object.keys(edges || {})\n  edgeKeys.forEach(nodeId => {\n    const edgeList = edges[nodeId]\n\n    edgeList.forEach(edge => {\n      if (!edge) return\n      graphData.edges.push({\n        from: nodeId,\n        to: edge.node,\n        smooth: {\n          enabled: true\n        },\n        color: {\n          color: getLinkColor(get(edge, 'data.type.id')),\n          hover: '#501214',\n          highlight: '#501214'\n        },\n        dashes: get(edge, 'data.type.id') === 'custom',\n        type: get(edge, 'data.type', {}),\n        arrows: getArrowDirection(edge, nodeId)\n      })\n    })\n  })\n\n  return graphData\n}\n\nexport const SystemsGraph = () => {\n  const [systems, systemsDispatch] = useReducer(systemsReducer, { nodes: [], edges: [] })\n  const [activeNode, setActiveNode] = useState()\n  const viewPort = useRef({})\n  const lastAdded = useRef()\n  const selectedNodes = useRef([])\n  const holdingShift = useRef(false)\n\n  const graphContainer = useRef()\n  const graph = useRef()\n\n  const updateGraph = async () => {\n    const nodes = await Graph.getNodes()\n    const edges = await Graph.getEdges()\n    selectedNodes.current = []\n    holdingShift.current = false\n    systemsDispatch({ type: 'update', nodes, edges })\n  }\n\n  const broadcastGraphDataUpdate = useEvent('graph-data-updated', updateGraph)\n\n  const updateSearchResults = (results) => {\n    if (graph.current.network) {\n      if (results.length <= 0) {\n        const selected = graph.current.network.getSelectedNodes()\n        graph.current.network.unselectAll()\n\n        // Were there nodes selected? Zoom back out.\n        if (selected.length > 0) {\n          graph.current.network.fit({\n            animation: {\n              duration: 300,\n              easingFunction: 'easeInOutQuad'\n            }\n          })\n        }\n        return\n      }\n      graph.current.network.selectNodes(results)\n      graph.current.network.fit({\n        nodes: results,\n        animation: {\n          duration: 300,\n          easingFunction: 'easeInOutQuad'\n        }\n      })\n    }\n  }\n\n  const deleteSelectedNodes = useCallback(async () => {\n    if (Array.isArray(selectedNodes.current) && selectedNodes.current.length > 0) {\n      await Graph.deleteNodes(selectedNodes.current)\n      viewPort.current.scale = graph.current.network.getScale()\n      viewPort.current.position = graph.current.network.getViewPosition()\n      selectedNodes.current = []\n      lastAdded.current = null\n      broadcastGraphDataUpdate()\n    }\n  }, [broadcastGraphDataUpdate])\n\n  useEffect(() => {\n    updateGraph()\n  }, [])\n\n  const resetActiveNode = () => setActiveNode(null)\n  const displayNodeDetails = useEvent('display-node-details')\n  useEvent('node-search-result', updateSearchResults)\n\n  const handleNodeSelect = useCallback(params => {\n    const node = get(params, `nodes[0]`, null)\n    if (params.nodes.length > 1 || holdingShift) return\n\n    if (node) {\n      if (!graph.current.network.isCluster(node) && !holdingShift.current) {\n        const matchingNode = systems.nodes.find(({ id }) => id === node)\n        if (matchingNode) {\n          setActiveNode(matchingNode)\n        }\n      }\n    }\n  }, [systems.nodes])\n\n  const handleNodeClick = useCallback(params => {\n    const node = graph.current.network.getNodeAt(params.pointer.DOM)\n    if (node) {\n      if (!graph.current.network.isCluster(node) && !holdingShift.current) {\n        const matchingNode = systems.nodes.find(({ id }) => id === node)\n        if (matchingNode) {\n          setActiveNode(matchingNode)\n        }\n      }\n\n      if (holdingShift.current && params.nodes[0]) {\n        const selected = [...selectedNodes.current, params.nodes[0]]\n        selectedNodes.current = selected\n        graph.current.network.selectNodes(selected)\n      }\n    } else {\n      selectedNodes.current = []\n    }\n  }, [systems.nodes])\n\n  const handleNodeDrag = useCallback(event => {\n    if (event.nodes.length > 0) {\n      const positions = graph.current.network.getPositions(event.nodes)\n      Graph.updateBatchNodePositions(positions)\n    }\n  }, [])\n\n  const handleKeyDown = useCallback(event => {\n    if (event.keyCode === 46 || event.keyCode === 8) { // Delete or Backspace\n      Subject.next('delete-selected-nodes')\n    }\n\n    if (event.ctrlKey && event.keyCode === 70) { // Control + f Shortcut\n      event.preventDefault()\n      Subject.next('focus-search-bar')\n    }\n\n    if (event.shiftKey && !holdingShift.current) {\n      holdingShift.current = true\n    }\n  }, [holdingShift])\n\n  const handleKeyUp = useCallback(event => {\n    if (!event.shiftKey && holdingShift.current) {\n      holdingShift.current = false\n    }\n  }, [holdingShift])\n\n  useEventListener('keydown', handleKeyDown)\n  useEventListener('keyup', handleKeyUp)\n\n  useEffect(() => {\n    if (activeNode) displayNodeDetails(activeNode)\n  }, [activeNode, displayNodeDetails])\n\n  const updateLastAdded = (node) => {\n    lastAdded.current = node\n    viewPort.current.scale = graph.current.network.getScale()\n    viewPort.current.position = graph.current.network.getViewPosition()\n  }\n\n  useEvent('deselect-active-node', resetActiveNode)\n  useEvent('node-added', updateLastAdded)\n  useEvent('delete-selected-nodes', deleteSelectedNodes)\n\n  useEffect(() => {\n    const options = {\n      autoResize: false,\n      interaction: {\n        hover: true,\n        hoverConnectedEdges: true\n      },\n      physics: {\n        enabled: false\n      }\n    }\n\n    if (!graph.current) {\n      const start = new Date()\n      const systemGraph = Network\n        .inContainer(graphContainer.current)\n        .withEdges(systems.edges)\n        .withNodes(systems.nodes)\n        .withOptions(options)\n        .build()\n\n      console.log(`Network Build Time: ${new Date() - start}ms`)\n      graph.current = systemGraph\n\n      graph.current.network.on('selectNode', handleNodeSelect)\n      graph.current.network.on('dragEnd', handleNodeDrag)\n      graph.current.network.on('click', handleNodeClick)\n\n      document.addEventListener('contextmenu', e => e.preventDefault(), false)\n    } else {\n      graph.current.network.off('selectNode')\n      graph.current.network.off('dragEnd')\n      graph.current.network.off('click')\n\n      graph.current.network.on('selectNode', handleNodeSelect)\n      graph.current.network.on('click', handleNodeClick)\n      graph.current.network.on('dragEnd', handleNodeDrag)\n\n      graph.current.setData(systems)\n      if (viewPort.current.position && viewPort.current.scale && !lastAdded.current) {\n        graph.current.network.moveTo({\n          position: viewPort.current.position,\n          scale: viewPort.current.scale\n        })\n        viewPort.current = {}\n      } else if (lastAdded.current) {\n        try {\n          graph.current.network.fit({\n            nodes: [lastAdded.current],\n            animation: {\n              duration: 300,\n              easingFunction: 'easeInOutQuad'\n            }\n          })\n          graph.current.network.selectNodes([lastAdded.current])\n          viewPort.current = {}\n        } catch {\n          lastAdded.current = null\n        }\n      }\n    }\n  }, [systems, handleNodeClick, handleNodeDrag, handleNodeSelect])\n\n  return (\n    <>\n      <div style={{ overflow: 'hidden', flex: 1 }} ref={graphContainer} id='graph' />\n      <Legend />\n    </>\n  )\n}\n","import dayjs from 'dayjs'\nimport get from 'lodash.get'\nimport uuid from 'uuid/v4'\nimport { Graph } from './Graph'\nimport { Subject } from './Subject'\n\nexport const downloadFile = async () => {\n  const current = await Graph.getCurrentDiagram()\n  const filename = get(current, '_name', 'Default Name')\n  const data = JSON.stringify({\n    id: get(current, '_id'),\n    name: get(current, '_name', 'Generic and Unnamed Diagram With Exceptionally Long Title'),\n    nodes: get(current, '_nodes', {}),\n    edges: get(current, '_edges', {})\n  })\n  const element = document.createElement('a')\n  element.setAttribute('href', `data:text/plain;charset=utf-8,${encodeURIComponent(data)}`)\n  element.setAttribute('download', `${filename} - ${dayjs().format('YYYY-MM-DD/THHmmss')}.json`)\n\n  element.style.display = 'none'\n  document.body.appendChild(element)\n  element.click()\n  document.body.removeChild(element)\n}\n\nconst handleFile = (event) => {\n  const reader = new FileReader()\n  reader.readAsBinaryString(event.target.files[0])\n\n  reader.onloadend = async () => {\n    const data = JSON.parse(reader.result)\n    const edges = get(data, 'edges', {})\n    const nodes = get(data, 'nodes', {})\n    const id = get(data, 'id', uuid())\n    const name = get(data, 'name', 'Unnamed System')\n\n    await Graph.saveUploadedData({ edges, nodes, name, id })\n    Subject.next('graph-data-updated')\n  }\n}\n\nexport const uploadFile = () => {\n  const element = document.createElement('input')\n  element.setAttribute('type', 'file')\n  element.setAttribute('accept', '.json')\n\n  element.style.display = 'none'\n  element.addEventListener('change', handleFile)\n  element.click()\n}\n","import React, { useEffect } from 'react'\nimport { useEvent } from '../../hooks'\nimport { CommandBar as OfficeCommandBar } from 'office-ui-fabric-react/lib/CommandBar'\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox'\nimport { downloadFile, uploadFile } from '../../util/FileManager'\nimport { Graph, Subject } from '../../util'\nimport debounce from 'lodash.debounce'\nimport get from 'lodash.get'\n\nconst handleSearch = async (event, value) => {\n  const nodes = await Graph.getNodesArray()\n\n  let results = nodes && nodes.filter(node => {\n    const name = get(node, 'data.name', '').toLowerCase()\n    return name.includes(value.toLowerCase())\n  }).map(({ id }) => id)\n\n  if (!value) {\n    results = []\n  }\n\n  Subject.next('node-search-result', results)\n}\n\nconst SearchNodes = () => {\n  return (\n    <SearchBox\n      id='search-box-nodes'\n      placeholder='Search'\n      className='searchBox'\n      styles={{\n        root: {\n          width: '250px',\n          alignSelf: 'center'\n        }\n      }}\n      onChange={debounce(handleSearch, 500)}\n    />\n  )\n}\n\nexport const CommandBar = props => {\n  const toggleSystemForm = useEvent('toggle-system-form')\n  const toggleDiagramForm = useEvent('toggle-diagram-form')\n  const openDiagramBrowser = useEvent('open-diagram-browser')\n\n  useEffect(() => {\n    const focusSearch = () => {\n      const searchBox = document.querySelector('#search-box-nodes')\n      searchBox.focus()\n    }\n\n    Subject.subscribe('focus-search-bar', focusSearch)\n  }, [])\n\n  const farItems = [\n    {\n      key: 'open',\n      name: 'Open Diagram',\n      iconProps: {\n        iconName: 'OpenFile'\n      },\n      onClick: openDiagramBrowser\n    },\n    {\n      key: 'search',\n      onRender: SearchNodes\n    }\n  ]\n\n  const nearItems = [\n    {\n      key: 'add',\n      name: 'Add',\n      iconProps: {\n        iconName: 'Add'\n      },\n      subMenuProps: {\n        items: [\n          {\n            key: 'system',\n            name: 'System',\n            onClick: toggleSystemForm,\n            iconProps: {\n              iconName: 'GitGraph'\n            }\n          },\n          {\n            key: 'diagram',\n            name: 'Diagram',\n            onClick: toggleDiagramForm,\n            iconProps: {\n              iconName: 'VisioDiagram'\n            }\n          }\n        ]\n      }\n    },\n    {\n      key: 'upload',\n      name: 'Upload',\n      iconProps: {\n        iconName: 'Upload'\n      },\n      onClick: () => {\n        uploadFile()\n      }\n    },\n    {\n      key: 'download',\n      name: 'Download',\n      iconProps: {\n        iconName: 'Download'\n      },\n      onClick: async () => {\n        downloadFile()\n      }\n    }\n  ]\n\n  return (\n    <div>\n      <OfficeCommandBar\n        items={nearItems}\n        farItems={farItems}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Stack } from 'office-ui-fabric-react/lib/Stack'\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox'\n\nconst canChange = (nextPath, nextValue) => (currentRead, currentWrite) => {\n  if (nextPath === 'read') {\n    return nextValue || currentWrite || false\n  }\n\n  if (nextPath === 'write') {\n    return nextValue || currentRead || false\n  }\n  return false\n}\n\nexport const ConnectionReadWrite = props => {\n  const { read, write, onChange } = props\n\n  return (\n    <Stack style={{ marginRight: 8, marginTop: 8 }} verticalAlign='space-between' tokens={{ childrenGap: 4 }}>\n      <Checkbox checked={read} onChange={(event, value) => {\n        if (canChange('read', value)(read, write)) {\n          onChange('read', value)\n        }\n      }} label='Read' />\n      <Checkbox checked={write} onChange={(event, value) => {\n        if (canChange('write', value)(read, write)) {\n          onChange('write', value)\n        }\n      }} label='Write' />\n    </Stack>\n  )\n}\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Dropdown } from 'office-ui-fabric-react/lib/Dropdown'\nimport { ConnectionReadWrite } from './ConnectionReadWrite'\nimport get from 'lodash.get'\nimport { IconButton } from 'office-ui-fabric-react'\n\nconst ConnectionContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  justify-content: flex-start;\n  padding: 8px;\n  margin-top: 12px;\n  border: 1px solid rgb(138, 136, 134);\n  box-sizing: border-box;\n  border-radius: 1px;\n\n  & > .ms-Dropdown-container {\n    flex: 1;\n    width: 100%;\n    margin-right: 4px;\n  }\n\n  & > .ms-Button--icon {\n    align-self: flex-end;\n  }\n`\n\nexport const Connection = props => {\n  const { handleRemove, id, edit, addNodeForm, nodeFormErrors, setNodeFormErrors, existingSystems, updateNodeForm } = props\n  const selectedTarget = get(addNodeForm, `connections[${id}].connectedTo.key`, null)\n  const selectedType = get(addNodeForm, `connections[${id}].connectionType.key`, null)\n\n  const selectedRead = get(addNodeForm, `connections[${id}].read`, true)\n  const selectedWrite = get(addNodeForm, `connections[${id}].write`, false)\n\n  const targetError = get(nodeFormErrors, `[${id}].target`)\n  const typeError = get(nodeFormErrors, `[${id}].type`)\n\n  useEffect(() => {\n    if (!edit) {\n      updateNodeForm({\n        path: `connections[${id}].read`,\n        value: true\n      })\n    }\n  }, [updateNodeForm, id, edit])\n\n  return (\n    <ConnectionContainer>\n      <IconButton\n        iconProps={{ iconName: 'ChromeClose' }}\n        onClick={() => {\n          const connection = get(addNodeForm, `connections[${id}]`, null)\n          if (connection) {\n            updateNodeForm({\n              path: `connections[${id}]`,\n              type: 'remove'\n            })\n          }\n          handleRemove()\n        }}\n      />\n      <Dropdown\n        label='Connected To'\n        placeholder={`What does this system connect to?`}\n        options={existingSystems}\n        errorMessage={targetError}\n        selectedKey={selectedTarget}\n        onChange={(event, value) => {\n          updateNodeForm({\n            path: `connections[${id}].connectedTo`,\n            value: { key: value.key, text: value.text }\n          })\n          if (`${id}` in nodeFormErrors) {\n            const errors = {\n              ...nodeFormErrors\n            }\n            delete errors[id]\n            setNodeFormErrors(errors)\n          }\n        }}\n      />\n      <Dropdown\n        label='Interface'\n        options={[\n          { key: 'builtin', text: 'Built In' },\n          { key: 'custom', text: 'Custom' }\n        ]}\n        placeholder='How does this system connect?'\n        selectedKey={selectedType}\n        errorMessage={typeError}\n        onChange={(event, value) => {\n          updateNodeForm({\n            path: `connections[${id}].connectionType`,\n            value: { key: value.key, text: value.text, color: value.color }\n          })\n          if (`${id}` in nodeFormErrors) {\n            const errors = {\n              ...nodeFormErrors\n            }\n            delete errors[id]\n            setNodeFormErrors(errors)\n          }\n        }}\n      />\n      <ConnectionReadWrite\n        read={selectedRead}\n        write={selectedWrite}\n        onChange={(path, value) => {\n          updateNodeForm({\n            path: `connections[${id}].${path}`,\n            value\n          })\n        }}\n      />\n    </ConnectionContainer>\n  )\n}\n","import React from 'react'\nimport { Dropdown } from 'office-ui-fabric-react/lib/Dropdown'\n\nconst areEqual = (prevProps, nextProps) => {\n  const keysUnchanged = prevProps.selectedKey === nextProps.selectedKey\n  const errorUnchanged = prevProps.errorMessage === nextProps.errorMessage\n  return keysUnchanged && errorUnchanged\n}\n\nexport const SystemType = React.memo(props => {\n  const { selectedKey, onChange, required, errorMessage } = props\n\n  return (\n    <Dropdown\n      required={required}\n      label='System Type'\n      options={[\n        { key: 'oncampus', text: 'On Campus' },\n        { key: 'cloud', text: 'Cloud' },\n        { key: 'external', text: 'External' }\n      ]}\n      errorMessage={errorMessage}\n      placeholder='Where does this system live?'\n      selectedKey={selectedKey}\n      onChange={onChange}\n    />\n  )\n}, areEqual)\n","import React from 'react'\nimport { TextField } from 'office-ui-fabric-react/lib/TextField'\nimport { ActionButton } from 'office-ui-fabric-react'\nimport { SystemType } from './SystemType'\n\nconst renderConnections = ({ connections, existingSystems, addNodeForm, updateNodeForm, setNodeFormErrors, nodeFormErrors }) => {\n  return connections.map(conn => React.cloneElement(conn, { existingSystems, addNodeForm, updateNodeForm, setNodeFormErrors, nodeFormErrors }))\n}\n\nconst checkURL = url => {\n  if (!url) return\n  try {\n    const checkedURL = new URL(url)\n    if (checkedURL) return ''\n  } catch (err) {\n    return err.message\n  }\n}\n\nexport const SystemFormView = props => {\n  const {\n    nodeFormErrors,\n    existingSystems,\n    setNodeFormErrors,\n    addNodeForm,\n    updateNodeForm,\n    connections,\n    addConnection,\n    edit,\n    loading\n  } = props\n  if (loading) return null\n  return (\n    <>\n      <TextField\n        label='Name'\n        placeholder='Choose a name'\n        errorMessage={nodeFormErrors.name}\n        required\n        onGetErrorMessage={(value => {\n          const newSystem = String(value).toLowerCase()\n          const nameExists = existingSystems.some(({ text }) => String(text).toLowerCase() === newSystem)\n          if (nameExists && !edit) {\n            setNodeFormErrors({\n              ...nodeFormErrors,\n              name: `The ${value} system already exists`\n            })\n          } else {\n            if (nodeFormErrors.name) {\n              const errors = {\n                ...nodeFormErrors\n              }\n              delete errors.name\n              setNodeFormErrors(errors)\n            }\n          }\n        })}\n        onChange={(event, value) => updateNodeForm({ path: 'name', value })}\n        value={addNodeForm.name || ''}\n      />\n      <SystemType\n        required\n        errorMessage={nodeFormErrors.type}\n        selectedKey={addNodeForm.type || null}\n        onChange={(event, value) => {\n          updateNodeForm({ path: 'type', value: value.key })\n          if ('type' in nodeFormErrors) {\n            const errors = {\n              ...nodeFormErrors\n            }\n            delete errors.type\n            setNodeFormErrors(errors)\n          }\n        }}\n      />\n      <TextField\n        label='Department'\n        placeholder='Was this built for another department?'\n        onChange={(event, value) => updateNodeForm({ path: 'department', value })}\n        value={addNodeForm.department || ''}\n      />\n      <TextField\n        label='URL'\n        placeholder='Is there a url to access this system?'\n        errorMessage={nodeFormErrors.url}\n        onChange={(event, value) => {\n          updateNodeForm({ path: 'url', value })\n          if ('url' in nodeFormErrors) {\n            const errors = {\n              ...nodeFormErrors\n            }\n            delete errors.url\n            setNodeFormErrors(errors)\n          }\n        }}\n        onGetErrorMessage={value => {\n          if (!value) return\n          return checkURL(value)\n        }}\n        value={addNodeForm.url || ''}\n      />\n      <TextField\n        label='Description'\n        placeholder='Enter some information others may want to know about this system'\n        multiline\n        rows={4}\n        onChange={(event, value) => updateNodeForm({ path: 'description', value })}\n        value={addNodeForm.description || ''}\n      />\n      {renderConnections({ connections, existingSystems, addNodeForm, updateNodeForm, setNodeFormErrors, nodeFormErrors })}\n      <ActionButton\n        onClick={addConnection}\n        iconProps={{ iconName: 'Add' }}\n      >\n        Add Connection\n      </ActionButton>\n    </>\n  )\n}\n","import React, { useState, useEffect, useReducer } from 'react'\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel'\nimport { Graph } from '../../util'\nimport { Stack } from 'office-ui-fabric-react/lib/Stack'\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react'\nimport { useEvent } from '../../hooks'\nimport get from 'lodash.get'\nimport uuid from 'uuid/v4'\nimport set from 'lodash.set'\nimport unset from 'lodash.unset'\nimport { Connection } from './Connection'\nimport { Network } from '../../util/Network'\nimport { SystemFormView } from './SystemFormView'\n\nconst makeConnections = (system, nodes) => {\n  const connections = {}\n  system.edges.forEach(edge => {\n    connections[edge.id] = {\n      read: edge.data.read,\n      write: edge.data.write,\n      connectionType: {\n        key: edge.data.type.id,\n        text: edge.data.type.label\n      },\n      connectedTo: {\n        key: edge.id,\n        text: get(nodes.filter(node => node.id === edge.id), '[0].data.name', '')\n      }\n    }\n  })\n  return connections\n}\n\nconst checkURL = url => {\n  if (!url) return\n  try {\n    const checkedURL = new URL(url)\n    if (checkedURL) return null\n  } catch (err) {\n    return err.message\n  }\n}\n\nconst makeFormState = system => {\n  const { network, getNodes } = Network.build()\n  const nodes = network.getConnectedNodes(system.id)\n\n  const connectedNodes = getNodes().filter(({ id }) => nodes.includes(id))\n\n  const formState = {\n    name: get(system, 'data.name'),\n    id: get(system, 'id'),\n    type: get(system, 'data.type'),\n    department: get(system, 'data.department'),\n    url: get(system, 'data.url'),\n    description: get(system, 'data.description'),\n    connections: makeConnections(system, connectedNodes)\n  }\n  return formState\n}\n\nconst addNodeReducer = (state, action) => {\n  if (action.path === '') return {}\n  const addNodeState = { ...state }\n  switch (action.type) {\n    case 'remove':\n      unset(addNodeState, action.path)\n      return addNodeState\n    case 'edit':\n      return { ...action.formState }\n    default:\n      set(addNodeState, action.path, action.value)\n      return addNodeState\n  }\n}\n\nconst connectionReducer = (connections, action) => {\n  switch (action.type) {\n    case 'add':\n      const id = uuid()\n      return [\n        ...connections,\n        <Connection\n          key={id}\n          id={id}\n          handleRemove={() => action.dispatch({ type: 'remove', id })}\n        />\n      ]\n    case 'remove':\n      return connections.filter(({ key }) => key !== action.id)\n    case 'reset':\n      return []\n    case 'edit':\n      const connKeys = Object.keys(action.connections)\n      return connKeys.map(key => {\n        const id = key\n        const dispatch = get(action, 'dispatch', null)\n\n        if (!dispatch || !id) return null\n\n        return (\n          <Connection\n            edit\n            key={id}\n            id={id}\n            handleRemove={() => dispatch({ type: 'remove', id })}\n          />\n        )\n      }).filter(item => item)\n    default:\n      return connections\n  }\n}\n\nconst getSystems = async () => {\n  const nodes = await Graph.getNodesArray()\n  return nodes.map(node => ({ key: node.id, text: node.data.name })).sort((a, b) => {\n    if (a.text < b.text) return -1\n    if (a.text > b.text) return 1\n    return 0\n  })\n}\n\nconst validate = (addNodeForm, nodeFormErrors) => {\n  let errors = {}\n  if (nodeFormErrors) {\n    errors = {\n      ...nodeFormErrors\n    }\n  }\n\n  if (!addNodeForm.type) {\n    errors.type = 'A system type must be selected'\n  }\n\n  if (!addNodeForm.name) {\n    errors.name = 'A system name is required'\n  }\n\n  if (addNodeForm.url) {\n    const error = checkURL(addNodeForm.url)\n    if (error) errors.url = error\n  }\n\n  if (addNodeForm.connections) {\n    const keys = Object.keys(addNodeForm.connections || {})\n    keys.forEach(key => {\n      const target = get(addNodeForm, `connections[${key}].connectedTo.key`, null)\n      const type = get(addNodeForm, `connections[${key}].connectionType.key`, null)\n\n      if (!type) set(errors, `[${key}].type`, 'The connection must have a type selected')\n      if (!target) set(errors, `[${key}].target`, 'You must select another system to connect to')\n    })\n  }\n\n  return errors\n}\n\nexport const SystemForm = (props) => {\n  const [loading, setLoading] = useState(true)\n  const [edit, setEdit] = useState(false)\n  const [isOpen, setIsOpen] = useState(false)\n  const [addNodeForm, updateNodeForm] = useReducer(addNodeReducer, {})\n  const [existingSystems, setExistingSystems] = useState()\n  const [nodeFormErrors, setNodeFormErrors] = useState({})\n  const [connections, connDispatch] = useReducer(connectionReducer, [])\n\n  const toggle = () => setIsOpen(!isOpen)\n  const resetForm = () => updateNodeForm({ path: '', value: {} })\n  const resetConnections = () => connDispatch({ type: 'reset' })\n\n  const handleEditSystem = (system) => {\n    const formState = makeFormState(system)\n    connDispatch({\n      type: 'edit',\n      connections: formState.connections || {},\n      dispatch: connDispatch\n    })\n    updateNodeForm({ type: 'edit', formState })\n    setEdit(true)\n    setIsOpen(true)\n  }\n\n  useEvent('edit-system-panel', handleEditSystem)\n\n  const addConnection = () => {\n    connDispatch({\n      type: 'add',\n      dispatch: connDispatch,\n      existingSystems,\n      addNodeForm,\n      updateNodeForm\n    })\n  }\n\n  const submitSystem = async () => {\n    const errors = validate(addNodeForm, nodeFormErrors)\n    if (Object.keys(errors).length > 0) {\n      setNodeFormErrors({\n        ...nodeFormErrors,\n        ...errors\n      })\n      return\n    }\n\n    const connections = get(addNodeForm, 'connections', {})\n    const data = {\n      description: get(addNodeForm, 'description', ''),\n      name: get(addNodeForm, 'name', ''),\n      type: get(addNodeForm, 'type', ''),\n      url: get(addNodeForm, 'url', ''),\n      department: get(addNodeForm, 'department', '')\n    }\n\n    let id = null\n    if (edit) {\n      const node = await Graph.makeNode({ id: addNodeForm.id, connections, data })\n      id = addNodeForm.id\n      await Graph.addNode(node)\n    } else {\n      const node = await Graph.makeNode({ connections, data })\n      id = node.id\n      await Graph.addNode(node)\n    }\n\n    broadcastNodeSave()\n    nodeAdded(id)\n    resetConnections()\n    resetForm()\n    if (edit) {\n      dismiss()\n    }\n  }\n\n  useEvent('toggle-system-form', toggle)\n  const dismiss = () => {\n    resetForm()\n    resetConnections()\n    setIsOpen(false)\n    setEdit(false)\n  }\n\n  const updateExistingSystems = async () => {\n    const systems = await getSystems()\n    setLoading(false)\n    setExistingSystems(systems)\n  }\n\n  useEffect(() => {\n    updateExistingSystems()\n  }, [])\n\n  const broadcastNodeSave = useEvent('graph-data-updated', updateExistingSystems)\n  const nodeAdded = useEvent('node-added')\n\n  return (\n    <Panel\n      headerText={`${edit ? 'Edit' : 'Add'} System`}\n      isOpen={isOpen}\n      onDismiss={dismiss}\n      isFooterAtBottom\n      onRenderFooterContent={() => (\n        <Stack horizontal horizontalAlign='space-between' tokens={{ childrenGap: 12 }}>\n          <DefaultButton text='Cancel' onClick={dismiss} />\n          <PrimaryButton text='Save System' onClick={submitSystem} />\n        </Stack>\n      )}\n      type={PanelType.medium}\n    >\n      <SystemFormView\n        loading={loading}\n        edit={edit}\n        existingSystems={existingSystems}\n        nodeFormErrors={nodeFormErrors}\n        setNodeFormErrors={setNodeFormErrors}\n        addNodeForm={addNodeForm}\n        updateNodeForm={updateNodeForm}\n        connections={connections}\n        addConnection={addConnection}\n      />\n    </Panel>\n  )\n}\n","import React from 'react'\nimport { Stack } from 'office-ui-fabric-react/lib/Stack'\nimport { Text } from 'office-ui-fabric-react/lib/Text'\n\nconst NodeDetailView = props => {\n  const { description, department, url } = props\n  return (\n    <Stack tokens={{ childrenGap: 8 }}>\n      <Stack tokens={{ childrenGap: 4 }}>\n        <Text style={{ textDecoration: 'underline' }} variant='mediumPlus'>URL</Text>\n        <a href={url} target='_blank' rel='noopener noreferrer'>{url}</a>\n      </Stack>\n      <Stack tokens={{ childrenGap: 4 }}>\n        <Text style={{ textDecoration: 'underline' }} variant='mediumPlus'>Department</Text>\n        <Text>{department}</Text>\n      </Stack>\n      <Stack tokens={{ childrenGap: 4 }}>\n        <Text style={{ textDecoration: 'underline' }} variant='mediumPlus'>Description</Text>\n        <Text>{description}</Text>\n      </Stack>\n    </Stack>\n  )\n}\n\nexport default NodeDetailView\n","import React, { useState } from 'react'\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel'\nimport { IconButton } from 'office-ui-fabric-react'\nimport { Stack } from 'office-ui-fabric-react/lib/Stack'\nimport { Text } from 'office-ui-fabric-react/lib/Text'\nimport styled from 'styled-components'\nimport get from 'lodash.get'\nimport { useEvent } from '../../hooks'\nimport NodeDetailView from './NodeDetailView'\n\nconst CustomPanel = styled(Panel)`\n  & > .ms-Panel-main {\n    transition: width 300ms ease-in-out;\n  }\n`\n\nexport const NodeDetail = props => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [node, setNode] = useState(null)\n  const displayNode = (node) => {\n    setNode(node)\n    setIsOpen(true)\n  }\n  const closePanel = () => setIsOpen(false)\n\n  useEvent('display-node-details', displayNode)\n  const editSystem = useEvent('edit-system-panel')\n  const deselectActiveNode = useEvent('deselect-active-node')\n  const name = get(node, 'data.name', 'Very Unnamed System')\n  const description = get(node, 'data.description', 'No description has been entered.')\n  const department = get(node, 'data.department', 'No department has been entered.')\n  const url = get(node, 'data.url', `${name} has no url`)\n\n  const handleEdit = () => {\n    editSystem(node)\n    setIsOpen(false)\n    deselectActiveNode()\n  }\n\n  return (\n    <CustomPanel\n      isOpen={isOpen}\n      onDismiss={() => {\n        deselectActiveNode()\n        closePanel()\n      }}\n      onRenderHeader={(props) => {\n        return (\n          <Stack horizontal tokens={{ childrenGap: 12 }}>\n            <Text variant='xLarge' style={{ marginLeft: 16, marginBottom: 12 }}>{props.headerText}</Text>\n            <IconButton\n              iconProps={{\n                iconName: 'Edit'\n              }}\n              onClick={handleEdit}\n            />\n          </Stack>\n        )\n      }}\n      isLightDismiss\n      type={PanelType.customNear}\n      customWidth={400}\n      headerText={name}\n    >\n      <NodeDetailView\n        department={department}\n        description={description}\n        url={url}\n      />\n    </CustomPanel>\n  )\n}\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\n\nconst cubeMove = keyframes`\n    25% { \n      transform: translateX(42px) rotate(-90deg) scale(0.5);\n      -webkit-transform: translateX(42px) rotate(-90deg) scale(0.5);\n    } 50% { \n      transform: translateX(42px) translateY(42px) rotate(-179deg);\n      -webkit-transform: translateX(42px) translateY(42px) rotate(-179deg);\n    } 50.1% { \n      transform: translateX(42px) translateY(42px) rotate(-180deg);\n      -webkit-transform: translateX(42px) translateY(42px) rotate(-180deg);\n    } 75% { \n      transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);\n      -webkit-transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);\n    } 100% { \n      transform: rotate(-360deg);\n      -webkit-transform: rotate(-360deg);\n    }\n`\n\nconst Spinner = styled.div`\n  margin: 100px auto;\n  width: 40px;\n  height: 40px;\n  align-self: center;\n  justify-self: center;\n  position: relative;\n`\n\nconst cubeCSS = css`\n  background-color: #501214;\n  width: 15px;\n  height: 15px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  \n  -webkit-animation: ${cubeMove} 1.8s infinite ease-in-out;\n  animation: ${cubeMove} 1.8s infinite ease-in-out;\n`\n\nconst CubeOne = styled.div`\n  ${cubeCSS}\n`\nconst CubeTwo = styled.div`\n  ${cubeCSS}\n  animation-delay: -0.9s;\n`\n\nexport const Loading = props => {\n  return (\n    <Spinner>\n      <CubeOne />\n      <CubeTwo />\n    </Spinner>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { Stack } from 'office-ui-fabric-react/lib/Stack'\nimport { Text } from 'office-ui-fabric-react/lib/Text'\nimport { IconButton, DefaultButton, PrimaryButton, Toggle } from 'office-ui-fabric-react'\nimport { TextField } from 'office-ui-fabric-react/lib/TextField'\nimport styled from 'styled-components'\n\nconst Form = styled(Stack)`\n  padding: 12px;\n`\n\nconst ButtonGroup = styled(Stack)`\n  padding-top: 24px;\n`\n\nconst Title = styled(Text)`\n  padding: 12px;\n  margin-right: 40px;\n`\n\nconst Close = styled(IconButton).attrs(() => ({ iconProps: { iconName: 'ChromeClose' } }))``\n\nexport const DialogFormView = props => {\n  const { dismiss, form, setForm, setErrors, submit, errors } = props\n\n  const handleNameChange = useCallback((event, value) => {\n    if (value) setErrors({ type: 'remove', path: 'name' })\n    setForm({ type: 'update', path: 'name', value })\n  }, [setForm, setErrors])\n\n  const handleCopyChange = useCallback((event, value) => {\n    setForm({ type: 'update', path: 'copy', value })\n  }, [setForm])\n\n  return (\n    <Form tokens={{ childrenGap: 12 }}>\n      <Stack horizontal>\n        <Title variant='xxLarge'>Add New Diagram</Title>\n        <Close onClick={dismiss} />\n      </Stack>\n      <TextField\n        label='Name'\n        placeholder={`Enter a name for your diagram`}\n        errorMessage={errors.name || ''}\n        value={form.name || ''}\n        onChange={handleNameChange}\n      />\n      <Toggle\n        inlineLabel\n        onText='On'\n        offText='Off'\n        label='Copy Current Diagram'\n        checked={form.copy || false}\n        onChange={handleCopyChange}\n      />\n      <ButtonGroup horizontal horizontalAlign='space-between'>\n        <DefaultButton text='Cancel' onClick={dismiss} />\n        <PrimaryButton text='Submit' onClick={submit} />\n      </ButtonGroup>\n    </Form>\n  )\n}\n","import React, { useReducer, useCallback, useState } from 'react'\nimport { useEvent } from '../../hooks'\nimport { Graph } from '../../util'\nimport { Modal } from 'office-ui-fabric-react/lib/Modal'\nimport { DialogFormView } from './DiagramFormView'\nimport set from 'lodash.set'\nimport unset from 'lodash.unset'\n\nconst formReducer = (state, action) => {\n  if (action.path === '') return {}\n  switch (action.type) {\n    case 'remove':\n      const removedState = { ...state }\n      if (action.path) unset(removedState, action.path)\n      return removedState\n    case 'update':\n      const updatedState = { ...state }\n      return set(updatedState, action.path, action.value)\n    default:\n      return state\n  }\n}\n\nconst validate = form => {\n  const errors = {}\n  if (!form.name) errors.name = 'Diagrams must have a name, c\\'mon it\\'s one text field'\n  return errors\n}\n\nexport const DiagramForm = props => {\n  const { initialForm } = props\n  const [isOpen, setIsOpen] = useState(false)\n  const [form, setForm] = useReducer(formReducer, initialForm || {})\n  const [errors, setErrors] = useReducer(formReducer, {})\n\n  const openDiagramForm = useCallback(() => {\n    setIsOpen(true)\n  }, [setIsOpen])\n\n  const closeDiagramForm = useCallback(() => {\n    setIsOpen(false)\n  }, [setIsOpen])\n\n  useEvent('toggle-diagram-form', openDiagramForm)\n  const broadcastGraphDataUpdate = useEvent('graph-data-updated')\n\n  const submit = useCallback(async () => {\n    const errors = validate(form)\n    if (errors.name) {\n      setErrors({ type: 'update', path: 'name', value: errors.name })\n    } else {\n      const shouldCopy = form.copy\n      const diagram = {\n        name: form.name\n      }\n      if (shouldCopy) {\n        diagram.nodes = await Graph.getNodes()\n        diagram.edges = await Graph.getEdges()\n      }\n\n      const { _id } = await Graph.makeNewDiagram(diagram)\n      closeDiagramForm()\n      await Graph.setCurrentDiagram(_id)\n      broadcastGraphDataUpdate()\n    }\n  }, [setErrors, form, closeDiagramForm, broadcastGraphDataUpdate])\n\n  return (\n    <Modal\n      isBlocking={false}\n      onDismiss={closeDiagramForm}\n      isOpen={isOpen}\n    >\n      <DialogFormView\n        form={form}\n        setForm={setForm}\n        setErrors={setErrors}\n        errors={errors}\n        submit={submit}\n        dismiss={closeDiagramForm}\n      />\n    </Modal>\n  )\n}\n","import React, { useEffect, useState, useCallback } from 'react'\nimport { Text } from 'office-ui-fabric-react/lib/Text'\nimport { TextField } from 'office-ui-fabric-react/lib/TextField'\nimport { ActionButton } from 'office-ui-fabric-react'\nimport { useEvent } from '../../hooks'\nimport { Graph } from '../../util'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst DiagramContainer = styled.div.attrs(props => ({\n  backgroundColor: props.edit ? 'transparent' : 'rgb(237, 235, 233)'\n}))`\n  display: flex;\n  flex: 1;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px;\n  cursor: default;\n\n  &:hover {\n    background-color: ${({ backgroundColor }) => backgroundColor}\n  }\n\n  transition: background-color 200ms ease-in-out;\n`\n\nconst DiagramName = ({ edit, name, onChange, toggleEdit }) => {\n  const checkForEnter = useCallback((event) => {\n    if (event.which === 13) { // Enter key pressed\n      toggleEdit()\n    }\n  }, [toggleEdit])\n\n  if (!edit) return <Text styles={{ root: { userSelect: 'none' } }} variant='large'>{name || 'No Name Set'}</Text>\n  return (\n    <TextField\n      onKeyDown={checkForEnter}\n      styles={{ root: { flex: 1 } }}\n      placeholder='Enter a name for this system'\n      value={name}\n      onChange={onChange}\n    />\n  )\n}\n\nconst Diagram = ({ name, id, handleSelect }) => {\n  const [edit, setEdit] = useState(false)\n  const [diagramName, setDiagramName] = useState(name)\n  const graphDataUpdated = useEvent('graph-data-updated')\n  const broadcastDiagramDeletion = useEvent('diagram-deleted')\n\n  const updateGraphDataName = useCallback(async () => {\n    await Graph.setDiagramName({ id, name: diagramName })\n    graphDataUpdated()\n  }, [graphDataUpdated, diagramName, id])\n\n  useEffect(() => {\n    updateGraphDataName()\n  }, [updateGraphDataName])\n\n  const toggleEdit = useCallback(() => {\n    setEdit(edit => !edit)\n  }, [setEdit])\n\n  const selectDiagram = useCallback(async (event) => {\n    await Graph.setCurrentDiagram(id)\n    graphDataUpdated()\n  }, [id, graphDataUpdated])\n\n  const deleteDiagram = useCallback(async (event) => {\n    const diagram = await Graph.getCurrentDiagram()\n    await Graph.deleteDiagram(diagram._id)\n    graphDataUpdated()\n    broadcastDiagramDeletion()\n  }, [graphDataUpdated, broadcastDiagramDeletion])\n\n  const handleNameChange = useCallback((event, value) => {\n    setDiagramName(value)\n  }, [setDiagramName])\n\n  return (\n    <DiagramContainer onClick={!edit ? selectDiagram : () => null} edit={edit}>\n      <DiagramName toggleEdit={toggleEdit} edit={edit} name={diagramName} onChange={handleNameChange} />\n      <div style={{display: 'flex', alignItems: 'center', justifyItems: 'flex-end', flexDirection: 'row'}}>\n        <ActionButton styles={{ root: { justifySelf: 'flex-end' } }} text='Edit' iconProps={{ iconName: 'Edit' }} onClick={toggleEdit} />\n        <ActionButton styles={{ root: { justifySelf: 'flex-end' } }} text='Delete' iconProps={{ iconName: 'Delete' }} onClick={deleteDiagram} /> \n      </div>\n    </DiagramContainer>\n  )\n}\n\nexport const DiagramList = props => {\n  const { diagrams } = props\n  if (diagrams.length <= 0) {\n    return (\n      <Container>\n        <Text styles={{ root: { flex: 1, paddingLeft: 8, paddingRight: 8, textAlign: 'center' } }} variant='xxLargePlus'>No Diagrams Are Saved</Text>\n      </Container>\n    )\n  }\n  return (\n    <Container>\n      {diagrams.map(diagram => <Diagram key={diagram._id} name={diagram._name} id={diagram._id} />)}\n    </Container>\n  )\n}\n\nDiagramList.defaultProps = {\n  diagrams: []\n}\n","import React from 'react'\nimport { Loading } from '../'\nimport styled from 'styled-components'\nimport { DiagramList } from './DiagramList'\n\nconst ListContainer = styled.div`\n  width: 600px;\n  padding: 12px;\n\n  @media only screen and (max-width: 767px) {\n    width: 100vw;\n    padding: 12px 0;\n  }\n`\n\nexport const DiagramBrowserView = props => {\n  const { diagrams, loading } = props\n\n  return (\n    <ListContainer>\n      {loading ? <Loading /> : <DiagramList diagrams={diagrams} />}\n    </ListContainer>\n  )\n}\n","import React, { useState, useEffect, useReducer, useCallback } from 'react'\nimport { Modal } from 'office-ui-fabric-react/lib/Modal'\nimport { useEvent } from '../../hooks'\nimport { Graph } from '../../util'\nimport { DiagramBrowserView } from './DiagramBrowserView'\n\nconst diagramReducer = (state, action) => {\n  switch (action.type) {\n    case 'loading':\n      return {\n        ...state,\n        loading: true\n      }\n    case 'success':\n      return {\n        ...state,\n        diagrams: action.diagrams,\n        loading: false\n      }\n    case 'failure':\n      return {\n        ...state,\n        loading: false,\n        error: action.error\n      }\n    default: return state\n  }\n}\n\nconst getDiagrams = async dispatch => {\n  dispatch({ type: 'loading' })\n  try {\n    const diagramsObject = await Graph.getDiagrams()\n    const diagrams = Object.values(diagramsObject).filter(diagram => !diagram._deleted)\n    dispatch({ type: 'success', diagrams })\n  } catch (error) {\n    dispatch({ type: 'failure', error })\n  }\n}\n\nexport const DiagramBrowser = props => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [current, dispatch] = useReducer(diagramReducer, { diagrams: [], loading: true })\n\n  const openDiagramBrowser = useCallback(() => {\n    setIsOpen(true)\n  }, [setIsOpen])\n\n  const closeDiagramBrowser = useCallback(() => {\n    setIsOpen(false)\n  }, [setIsOpen])\n\n  const handleDiagramDeletion = useCallback(() => {\n    if (isOpen) {\n      getDiagrams(dispatch)\n    }\n  }, [isOpen, dispatch])\n\n  useEvent('open-diagram-browser', openDiagramBrowser)\n  useEvent('diagram-deleted', handleDiagramDeletion)\n\n  useEffect(() => {\n    if (isOpen) {\n      getDiagrams(dispatch)\n    }\n  }, [isOpen, dispatch])\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onDismiss={closeDiagramBrowser}\n    >\n      <DiagramBrowserView\n        diagrams={current.diagrams}\n        loading={current.loading}\n      />\n    </Modal>\n  )\n}\n","import React, { useReducer, useEffect, useCallback } from 'react'\nimport { Text } from 'office-ui-fabric-react/lib/Text'\nimport styled from 'styled-components'\nimport { useEvent } from '../../hooks'\nimport { Graph } from '../../util'\n\nconst Container = styled.div.attrs(props => ({\n  display: props.title ? 'flex' : 'none'\n}))`\n  position: absolute;\n  top: 60px;\n  right: 16px;\n  display: ${({ display }) => display};\n  align-items: flex-start;\n  justify-content: center;\n  padding: 8px 12px 8px 8px;\n  background-color: white;\n  border-radius: 2px;\n  box-shadow: 0 3px 5px #30303030;\n  z-index: 10;\n\n  @media only screen and (max-width: 767px) {\n    display: none;\n  }\n`\n\nconst titleReducer = (state, action) => {\n  switch (action.type) {\n    case 'loading':\n      return {\n        ...state,\n        loading: true\n      }\n    case 'success':\n      return {\n        ...state,\n        title: action.title,\n        loading: false\n      }\n    case 'failure':\n      return {\n        ...state,\n        loading: false,\n        error: action.error\n      }\n    default: return state\n  }\n}\n\nconst getTitle = async (dispatch) => {\n  dispatch({ type: 'loading' })\n  try {\n    const title = await Graph.getTitle()\n    dispatch({ type: 'success', title })\n  } catch (error) {\n    dispatch({ type: 'failure', error })\n  }\n}\n\nexport const DiagramTitle = props => {\n  const [current, dispatch] = useReducer(titleReducer, {})\n\n  const updateTitle = useCallback(() => {\n    getTitle(dispatch)\n  }, [dispatch])\n\n  useEffect(() => {\n    updateTitle()\n  }, [updateTitle])\n\n  useEvent('graph-data-updated', updateTitle)\n\n  return current.loading ? null : (\n    <Container title={current.title} >\n      <Text variant='xLarge'>{current.title}</Text>\n    </Container>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { DiagramForm, DiagramBrowser, DiagramTitle, SystemsGraph, NodeDetail, SystemForm, CommandBar } from './components'\n\nconst Page = styled.div`\n  background-color: #e8e3db;\n  flex: 1;\n  flex-direction: column;\n  display: flex;\n`\n\nfunction App () {\n  return (\n    <Page>\n      <CommandBar />\n      <DiagramTitle />\n      <DiagramForm />\n      <DiagramBrowser />\n      <SystemsGraph />\n      <SystemForm />\n      <NodeDetail />\n    </Page>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons'\nimport App from './App'\nimport './index.css'\n\ninitializeIcons()\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  render(<App />, document.getElementById('root'))\n})\n"],"sourceRoot":""}